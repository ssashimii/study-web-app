generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String         @unique
  password     String
  avatar       String?
  academic     String
  interests    String
  studyEnv     String
  availability Availability[]
  courses      Course[]        @relation("UserCourses")
  createdAt    DateTime       @default(now())
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages") 
  friends      Friend[]      @relation("UserFriends")
  friendedBy   Friend[]      @relation("UserFriendOf")
}


model Availability {
  id      Int    @id @default(autoincrement())
  day     String
  from    String
  to      String
  topic   String?
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
}

model Course {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  color       String?
  users       User[]  @relation("UserCourses")
}


model Message {
  id         Int      @id @default(autoincrement())
  text       String
  createdAt  DateTime @default(now())
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId   Int
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId Int
}

model Friend {
  id         Int   @id @default(autoincrement())
  user       User  @relation("UserFriends", fields: [userId], references: [id])
  userId     Int
  friend     User  @relation("UserFriendOf", fields: [friendId], references: [id])
  friendId   Int

  @@unique([userId, friendId])
}
